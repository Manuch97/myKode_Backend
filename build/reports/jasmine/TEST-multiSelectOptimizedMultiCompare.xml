<?xml version="1.0" encoding="UTF-8" ?>
<testsuite name="multiSelect OptimizedMultiCompare" errors="0" tests="12" failures="0" time="0.004" timestamp="2021-07-29T16:30:29">
  <testcase classname="multiSelect OptimizedMultiCompare" name="new MultiCompare should return an object" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare.isMultiValue false on simple comparers" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare sameFieldsAs returns true if same fields" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare sameFieldsAs returns false if different fields" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare sameFieldsAs returns false if subset fields" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare hasValue returns true on simple comparators" time="0.001"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare joinWith returns true if comparers equal" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare joinWith returns true if comparers differs on a single field" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare joinWith returns false if comparers differs on different fields (multivalue)" time="0.001"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare joinWith returns true if comparers differs on a single field (also on multivalue)" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="OptimizedMultiCompare joinWith returns false if subset fields" time="0"></testcase>
  <testcase classname="multiSelect OptimizedMultiCompare" name="getFilter() should get a working function" time="0.002"></testcase>
</testsuite>