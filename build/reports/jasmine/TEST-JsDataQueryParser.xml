<?xml version="1.0" encoding="UTF-8" ?>
<testsuite name="JsDataQueryParser" errors="0" tests="52" failures="0" time="0.012" timestamp="2021-07-29T16:30:35">
  <testcase classname="JsDataQueryParser" name="should be defined" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="null compiles to null" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="empty string compiles to null" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Truthy compiles to null" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Falsy does not  compile to null" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (1+a)=2" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with + and * 3*4*3+2*3+5" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with +,*,/ 3*4*3+2*3+5*2/2" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with a sequence of / 12/2/3" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ 3*4*3+a*2*3+5*2/2" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ 3*a +2 = 5 and b is not null" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ 5*3 = 2*5+5" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ 5*3 = 2*5+4" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a in (1,2,3,4)" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ a is not null and b=5 and c&amp;gt;2 and d=&amp;apos;a&amp;apos;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ a is not null and b=5 and c&amp;gt;2 and d=&amp;apos;a&amp;apos;&amp;apos;b&amp;apos;" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling 12" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling 12.23" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling 12.123456" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling &amp;apos;abcde 1&amp;apos;2 and similar" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling NOT1" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ a is null " time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling an expression with field +,*,/ a is not null " time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (a is not null)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (a is not null) and (b is null)" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a  is not  null and b is null and c=1 or z=&amp;apos;a&amp;apos;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a  is not  null and b is null and c=1 or z=&amp;apos;a&amp;apos;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (a  is not  null and b is null and c=1 or z=&amp;apos;a&amp;apos;) and q is null" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (a  is not  null or b is null) and q is null" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling q is null and (a  is not  null or b is null)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling q is null and (a  is not  null or b is null)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling  q is null and a  is not  null or b is null or c is null" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling  q is null or a  is not  null and b is null and c is null" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling q is null or a  is not  null and (b is null and c is null)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling (a in (2,3,4,5))" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a in (2,3,4,5)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a not in (2,3,4,5)" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a not in (2,3,4,5) or c==1" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling isnull(a,1)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling isnull(isnull(a,1),2)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a or b" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a or isnull(a,1)" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling isnull(a,isnull(b,c))" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling isnull(q,isnull(a,isnull(c,3)))" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling &amp;lt;%sys[alfa]%&amp;gt;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling &amp;lt;%usr[beta]%&amp;gt;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling &amp;lt;%variable_Name%&amp;gt;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling &amp;lt;%variable_Name%&amp;gt;=3 and &amp;lt;%usr[beta]%&amp;gt;=&amp;apos;S&amp;apos;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a+b" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a like b" time="0.001"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a like b+&amp;apos;%&amp;apos;" time="0"></testcase>
  <testcase classname="JsDataQueryParser" name="Compiling a between 1 and 2" time="0"></testcase>
</testsuite>