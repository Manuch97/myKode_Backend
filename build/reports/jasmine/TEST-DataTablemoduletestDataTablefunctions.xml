<?xml version="1.0" encoding="UTF-8" ?>
<testsuite name="DataTable module test DataTable functions" errors="0" tests="50" failures="0" time="0.006" timestamp="2022-05-26T14:27:54">
  <testcase classname="DataTable module test DataTable functions" name="dataTable should be defined" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="dataTable should have a string name" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="dataTable should have an object collection (rows)" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="adding object to table should modify collection size" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="detaching object to table should modify collection size" time="0.001"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="adding and detaching object does not change object values" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="detaching object does not change object values " time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="detached objects are not linked toDataRow anymore" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="adding object are given a state of added" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="loaded object are given a state of unchanged" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="deleting objects should not modify collection size" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="deleting objects should modify collection size after acceptChanges" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="deleted rows becomes detached after acceptChanges" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="objects are no longer linked to datarow when those have been detached" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="datarows haven&amp;apos;t any getRow method  when  detached" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="multiple addition of same object should be ignored" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="after acceptChanges no modification are left (update-rejectChanges)" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="after rejectChanges no modification are left (add-acceptChanges)" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="after rejectChanges no modification are left (del-acceptChanges)" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="rejectChanges should undo deletions" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="rejectChanges should undo additions" time="0.001"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="getChanges should contain added rows" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="getChanges should contain deleted rows" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="getChanges should contain modified rows" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="getChanges should not contain false updates" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="key should be a function" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="key() should return an array" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="key(args) should set Table key" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="select with null as filter should return all rows" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="select should return matching rows" time="0.001"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="defaults should be a function" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="newRow should be a function" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="newRow should return an object" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="The object returned by newRow should have a dataRow" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="after calling defaults(values), new Row has defaults" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="successive defaults(values) merge their values" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="after calling clearDefaults, new Row has NO defaults" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="newRow(o) should have o values where o is given" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="newRow(o) should have default  values where not overridden by o " time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="DataRow modification created with newRow does not affect original object" time="0.001"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="changing defaults does not change rows" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="loaded rows should be in unchanged state" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="false changes should leave state unchanged" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="loaded array of rows should be in unchanged state" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="default value of tableForReading should be table name" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="default value of tableForWriting should be table name" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="setting  tableForReading does not change table name" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="setting  tableForWriting does not change table name" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="cloning should preserve tableForReading, tableForWriting, autoIncrementColumns" time="0"></testcase>
  <testcase classname="DataTable module test DataTable functions" name="sortRows should return a sorted copy of given rows" time="0.001"></testcase>
</testsuite>